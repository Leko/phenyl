// @flow
import type { CustomQueryDefinitions } from './custom-query-definition.js.flow'
import type { CustomCommandDefinitions } from './custom-command-definition.js.flow'
import type { EntityDefinitions } from './entity-definition.js.flow'
import type { UserDefinitions } from './user-definition.js.flow'
import type {
  TypeMap,
  EntityMapOf,
  CustomQueryMapOf,
  CustomCommandMapOf,
  AuthCommandMapOf,
} from './type-map.js.flow'

export type FunctionalGroup<TM: TypeMap> = {
  users?: UserDefinitions<EntityMapOf<TM>, AuthCommandMapOf<TM>>,
  nonUsers?: EntityDefinitions<EntityMapOf<TM>>,
  customQueries?: CustomQueryDefinitions<CustomQueryMapOf<TM>>,
  customCommands?: CustomCommandDefinitions<CustomCommandMapOf<TM>>,
}

export type NormalizedFunctionalGroup<TM: TypeMap> = {
  users: UserDefinitions<EntityMapOf<TM>, AuthCommandMapOf<TM>>,
  nonUsers: EntityDefinitions<EntityMapOf<TM>>,
  customQueries: CustomQueryDefinitions<CustomQueryMapOf<TM>>,
  customCommands: CustomCommandDefinitions<CustomCommandMapOf<TM>>,
}
