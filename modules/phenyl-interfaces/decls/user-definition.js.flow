// @flow

import type { EntityDefinition } from './entity-definition.js.flow'
import type { Session } from './session.js.flow'
import type {
  LoginCommand,
} from './command.js.flow'

import type {
  EntityMap,
  AuthCredentials,
  AuthOptions,
  AuthCommandMap,
} from './type-map.js.flow'
import type {
  AuthenticationResult
} from './handler.js.flow'

type EntityName = string

export interface UserDefinition<N: EntityName, C: Object, O: Object> {
  authentication(loginCommand: LoginCommand<N, C, O>, session: ?Session): Promise<AuthenticationResult>,
}

export type UserDefinitions<EM: EntityMap, AM: AuthCommandMap> =
  $ObjMap<AM, <T, N>(T, N) => UserDefinition<N, AuthCredentials<AM, N>, AuthOptions<AM, N>> & EntityDefinition<N, $ElementType<EM, N>>>
