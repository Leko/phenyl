// @flow
import type {
  RequestDataOf
} from './request-data.js.flow'

import type {
  ResponseDataOf
} from './response-data.js.flow'

import type {
  ServerError
} from './error.js.flow'

import type {
  TypeMap
} from './type-map.js.flow'

import type {
  VersionDiff,
  VersionDiffSubscriber,
  SubscriptionRequest,
  SubscriptionResult,
} from './versioning.js.flow'

import type {
  RestApiHandler
} from './rest-api-handler.js.flow'

export type WebSocketClientMessage<TM: TypeMap> = WebSocketClientRequestDataMessage<TM> | WebSocketClientSubscriptionRequestMessage

export type WebSocketClientRequestDataMessage<TM: TypeMap> = {|
  reqData: RequestDataOf<TM>,
  tag: string,
|}

export type WebSocketClientSubscriptionRequestMessage = {|
  subscription: SubscriptionRequest,
  tag: string,
|}

export type WebSocketServerMessage<TM: TypeMap> =
  WebSocketServerResponseDataMessage<TM> |
  WebSocketServerVersionDiffMessage |
  WebSocketServerSubscriptionResultMessage |
  WebSocketServerErrorMessage

export type WebSocketServerResponseDataMessage<TM: TypeMap> = {|
  resData: ResponseDataOf<TM>,
  tag: string,
|}

export type WebSocketServerVersionDiffMessage = {|
  versionDiff: VersionDiff,
|}

export type WebSocketServerSubscriptionResultMessage = {|
  subscriptionResult: SubscriptionResult,
  tag: string,
|}

export type WebSocketServerErrorMessage = {|
  error: ServerError,
  tag: ?string,
|}

export type WebSocketServerParams<TM: TypeMap> = {
  restApiHandler: RestApiHandler<TM>,
  versionDiffSubscriber?: VersionDiffSubscriber
}
